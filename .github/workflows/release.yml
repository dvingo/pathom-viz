name: Build/release

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.2
        with:
          # Install just one or all simultaneously
          cli: 1.10.1.693 # Clojure CLI based on tools.deps

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: NPM Install
        run: npm install

      - name: Build JS
        if: ${{ matrix.os != 'windows-latest' }}
        run: npx shadow-cljs release electron-background electron-renderer

      - name: Build JS on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: npx shadow-cljs release electron-background electron-renderer
        shell: powershell

      - name: Build CSS
        if: ${{ matrix.os != 'windows-latest' }}
        run: npx postcss src/css/tailwind.css -o ./shells/electron/compiled-css/main.css --verbose
        env:
          TAILWIND_MODE: build
          NODE_ENV: production

      - name: Build CSS on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: npx postcss src/css/tailwind.css -o ./shells/electron/compiled-css/main.css --verbose
        env:
          TAILWIND_MODE: build
          NODE_ENV: production
        shell: powershell

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.API_KEY_ID }}.p8

      - name: Electron Builder Action
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          # GitHub authentication token
          github_token: ${{ secrets.github_token }}
          # Whether the app should be released after a successful build
          release: true
          # Directory where NPM/Yarn commands should be run
          package_root: shells/electron
          app_root: shells/electron
          skip_build: true
          mac_certs: ${{ secrets.MAC_CERTS }}
          mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.API_KEY_ISSUER_ID }}
